/* tslint:disable */
/* eslint-disable */
/**
 * Knowledge Manager API
 * The Knowledge Manager API provides endpoints for managing knowledge units. A knowledge unit aggregates multi-dimensional information needed for specific tasks, enabling cross-domain information reuse and contextual knowledge assembly.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  KnowledgeUnitWithDocumentsResponse,
} from '../models/index';
import {
    KnowledgeUnitWithDocumentsResponseFromJSON,
    KnowledgeUnitWithDocumentsResponseToJSON,
} from '../models/index';

export interface KnowledgeUnitsDeprecatedIdGetRequest {
    id: string;
}

export interface KnowledgeUnitsIdDownloadGetRequest {
    id: string;
}

/**
 * 
 */
export class KnowledgeUnitManagerResourceApi extends runtime.BaseAPI {

    /**
     * Get Knowledge Unit With Documents
     * @deprecated
     */
    async knowledgeUnitsDeprecatedIdGetRaw(requestParameters: KnowledgeUnitsDeprecatedIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KnowledgeUnitWithDocumentsResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling knowledgeUnitsDeprecatedIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/knowledge-units/deprecated/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => KnowledgeUnitWithDocumentsResponseFromJSON(jsonValue));
    }

    /**
     * Get Knowledge Unit With Documents
     * @deprecated
     */
    async knowledgeUnitsDeprecatedIdGet(requestParameters: KnowledgeUnitsDeprecatedIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KnowledgeUnitWithDocumentsResponse> {
        const response = await this.knowledgeUnitsDeprecatedIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Download Knowledge Unit
     */
    async knowledgeUnitsIdDownloadGetRaw(requestParameters: KnowledgeUnitsIdDownloadGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling knowledgeUnitsIdDownloadGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/knowledge-units/{id}/download`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Download Knowledge Unit
     */
    async knowledgeUnitsIdDownloadGet(requestParameters: KnowledgeUnitsIdDownloadGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.knowledgeUnitsIdDownloadGetRaw(requestParameters, initOverrides);
    }

}
