/* tslint:disable */
/* eslint-disable */
/**
 * Knowledge Manager API
 * The Knowledge Manager API provides endpoints for managing knowledge units. A knowledge unit aggregates multi-dimensional information needed for specific tasks, enabling cross-domain information reuse and contextual knowledge assembly.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  KnowledgeUnit,
  KnowledgeUnitRequest,
} from '../models/index';
import {
    KnowledgeUnitFromJSON,
    KnowledgeUnitToJSON,
    KnowledgeUnitRequestFromJSON,
    KnowledgeUnitRequestToJSON,
} from '../models/index';

export interface KnowledgeUnitsPostRequest {
    knowledgeUnitRequest: KnowledgeUnitRequest;
}

/**
 * 
 */
export class KnowledgeUnitResourceApi extends runtime.BaseAPI {

    /**
     * Get Knowledge Units
     */
    async knowledgeUnitsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<KnowledgeUnit>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/knowledge-units`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(KnowledgeUnitFromJSON));
    }

    /**
     * Get Knowledge Units
     */
    async knowledgeUnitsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<KnowledgeUnit>> {
        const response = await this.knowledgeUnitsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Create Knowledge Unit
     */
    async knowledgeUnitsPostRaw(requestParameters: KnowledgeUnitsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['knowledgeUnitRequest'] == null) {
            throw new runtime.RequiredError(
                'knowledgeUnitRequest',
                'Required parameter "knowledgeUnitRequest" was null or undefined when calling knowledgeUnitsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/knowledge-units`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: KnowledgeUnitRequestToJSON(requestParameters['knowledgeUnitRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create Knowledge Unit
     */
    async knowledgeUnitsPost(requestParameters: KnowledgeUnitsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.knowledgeUnitsPostRaw(requestParameters, initOverrides);
    }

}
