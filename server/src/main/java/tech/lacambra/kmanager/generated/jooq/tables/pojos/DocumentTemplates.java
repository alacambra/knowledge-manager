/*
 * This file is generated by jOOQ.
 */
package tech.lacambra.kmanager.generated.jooq.tables.pojos;


import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DocumentTemplates implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String name;
    private String category;
    private JSONB formSchema;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public DocumentTemplates() {}

    public DocumentTemplates(DocumentTemplates value) {
        this.id = value.id;
        this.name = value.name;
        this.category = value.category;
        this.formSchema = value.formSchema;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public DocumentTemplates(
        UUID id,
        String name,
        String category,
        JSONB formSchema,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.id = id;
        this.name = name;
        this.category = category;
        this.formSchema = formSchema;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.document_templates.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.document_templates.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.document_templates.name</code>.
     */
    @NotNull
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.document_templates.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.document_templates.category</code>.
     */
    public String getCategory() {
        return this.category;
    }

    /**
     * Setter for <code>public.document_templates.category</code>.
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for <code>public.document_templates.form_schema</code>.
     */
    @NotNull
    public JSONB getFormSchema() {
        return this.formSchema;
    }

    /**
     * Setter for <code>public.document_templates.form_schema</code>.
     */
    public void setFormSchema(JSONB formSchema) {
        this.formSchema = formSchema;
    }

    /**
     * Getter for <code>public.document_templates.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.document_templates.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.document_templates.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.document_templates.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DocumentTemplates other = (DocumentTemplates) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        if (this.formSchema == null) {
            if (other.formSchema != null)
                return false;
        }
        else if (!this.formSchema.equals(other.formSchema))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.formSchema == null) ? 0 : this.formSchema.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DocumentTemplates (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(category);
        sb.append(", ").append(formSchema);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
